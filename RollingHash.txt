class RollingHash {
#define int long long
#define H pair<int, int>
#define vec vector
	int b1, b2;
	int m1, m2;
	vec<int>h1, h2, p1, p2;
public:
	RollingHash() :b1(1007), b2(1009), m1(1e9 + 7), m2(1e9 + 9) {}
	void init(const string& s) {
		int n = s.size();
		h1.assign(n + 1, 0);
		h2.assign(n + 1, 0);
		p1.assign(n + 1, 1);
		p2.assign(n + 1, 1);
		for (int i = 0; i < n; i++) {
			h1[i + 1] = (h1[i] + s[i]) * b1 % m1;
			h2[i + 1] = (h2[i] + s[i]) * b2 % m2;
			p1[i + 1] = p1[i] * b1 % m1;
			p2[i + 1] = p2[i] * b2 % m2;
		}
	}
	H get(int l, int r) {
		int t1 = ((h1[r] - h1[l] * p1[r - l]) % m1 + m1) % m1;
		int t2 = ((h2[r] - h2[l] * p2[r - l]) % m2 + m2) % m2;
		return H{ t1,t2 };
	}//[l,r)
};